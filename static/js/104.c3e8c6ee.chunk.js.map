{"version":3,"file":"static/js/104.c3e8c6ee.chunk.js","mappings":"oOAEMA,EAAW,kCAEJC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENC,EAAAA,EAAAA,IAAU,GAADC,OAAIb,EAAQ,eAAc,KAAD,EAA3C,OAARO,EAAQE,EAAAK,KAAAL,EAAAM,OAAA,SACPR,EAASS,MAAI,OAAAP,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEpBS,QAAQC,OAAO,IAAIC,MAAM,cAAc,yBAAAX,EAAAY,OAAA,GAAAf,EAAA,kBAE1C,kBAP6B,OAAAJ,EAAAoB,MAAA,KAAAC,UAAA,KASjBC,EAAW,eAAAC,GAAAtB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAqB,EAAOC,GAAK,IAAApB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAEZC,EAAAA,EAAAA,IAAU,GAADC,OAAIb,EAAQ,qBAAAa,OAAoBc,IAAS,KAAD,EAA1D,OAARpB,EAAQqB,EAAAd,KAAAc,EAAAb,OAAA,SACPR,EAASS,MAAI,OAAAY,EAAAlB,KAAA,EAAAkB,EAAAX,GAAAW,EAAA,SAEpBV,QAAQC,OAAO,IAAIC,MAAM,cAAc,yBAAAQ,EAAAP,OAAA,GAAAK,EAAA,kBAE1C,gBAPuBG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KASXO,EAAS,eAAAC,GAAA5B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA2B,EAAOC,GAAE,IAAA1B,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEPC,EAAAA,EAAAA,IAAU,GAADC,OAAIb,EAAQ,eAAAa,OAAcoB,IAAM,KAAD,EAAjD,OAAR1B,EAAQ2B,EAAApB,KAAAoB,EAAAnB,OAAA,SACPR,EAASS,MAAI,OAAAkB,EAAAxB,KAAA,EAAAwB,EAAAjB,GAAAiB,EAAA,SAEpBhB,QAAQC,OAAO,IAAIC,MAAM,cAAc,yBAAAc,EAAAb,OAAA,GAAAW,EAAA,kBAE1C,gBAPqBG,GAAA,OAAAJ,EAAAT,MAAA,KAAAC,UAAA,I,4FCnBhBa,GAAOC,E,QAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wDAMTC,EAAUC,EAAAA,EAAAA,QAAcC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iGAMxBI,EAAUF,EAAAA,EAAAA,IAAUG,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,0lBAqBhBH,GAOO,SAACS,GAAC,SAAAhC,OAAQgC,EAAEC,MAAMC,OAAOC,WAAU,I,SChC3D,EARe,WACb,OACEC,EAAAA,EAAAA,KAACT,EAAO,CAAAU,UACND,EAAAA,EAAAA,KAACN,EAAO,KAGd,C,sPCNaQ,GAAaV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAeH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oCAI5Bc,EAAQZ,EAAAA,EAAAA,GAASC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,mRAcjBe,EAAOb,EAAAA,EAAAA,GAASG,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,kLAMhBgB,EAAMd,EAAAA,EAAAA,IAAUe,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,0BAIhBkB,EAAMhB,EAAAA,EAAAA,IAAUiB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,wDAKhBoB,EAAQlB,EAAAA,EAAAA,GAASmB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,+GAEnB,SAACM,GAAC,SAAAhC,OAAQgC,EAAEC,MAAMC,OAAOc,MAAK,IAK5BC,EAAOrB,EAAAA,EAAAA,EAAQsB,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,mHAKjB,SAACM,GAAC,SAAAhC,OAAQgC,EAAEC,MAAMC,OAAOiB,KAAI,I,SChBxC,EArBqB,SAAH9D,GAAkB,IAAZ+D,EAAI/D,EAAJ+D,KAChBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAACf,EAAK,CAAAH,SAAA,CACHe,EAAKI,KAAI,SAAA5C,GAAA,IAAGQ,EAAER,EAAFQ,GAAIgC,EAAIxC,EAAJwC,KAAMK,EAAM7C,EAAN6C,OAAQC,EAAK9C,EAAL8C,MAAK,OAClCtB,EAAAA,EAAAA,KAACK,EAAI,CAAAJ,UACHkB,EAAAA,EAAAA,MAACjB,EAAU,CAACqB,GAAE,IAAA3D,OAAMoB,GAAMwC,MAAO,CAAEC,KAAMR,GAAWhB,SAAA,EAClDD,EAAAA,EAAAA,KAACM,EAAG,CAACoB,IAAKJ,EAAOK,IAAKX,KACtBG,EAAAA,EAAAA,MAACX,EAAG,CAAAP,SAAA,EACFD,EAAAA,EAAAA,KAACU,EAAK,CAAAT,SAAEe,KACRhB,EAAAA,EAAAA,KAACa,EAAI,CAAAZ,SAAEoB,WALFrC,EAQJ,KAETgB,EAAAA,EAAAA,KAAC4B,EAAAA,GAAM,MAGb,E,oBC5BaC,EAAOrC,EAAAA,EAAAA,KAAWH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yDAKlBwC,EAAQtC,EAAAA,EAAAA,MAAYC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6HAIX,SAACM,GAAC,SAAAhC,OAAQgC,EAAEC,MAAMC,OAAOiC,OAAM,IAIxCC,EAASxC,EAAAA,EAAAA,OAAaG,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,yLCiEnC,EAvEmB,WAAO,IAAD2C,EACvBC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA4BV,EAAAA,EAAAA,WAAS,GAAMW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAAmC,QAA7BhB,EAAGU,EAAaO,IAAI,iBAAS,IAAAjB,EAAAA,EAAI,IAE7CkB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAnG,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAU,EAAAsF,EAAAC,EAAA,OAAAnG,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACGV,EAAAA,EAAAA,MAAoB,KAAD,EAAhCe,EAAIP,EAAAK,KACJwF,EAAatF,EAAKwF,QAClBD,EAAWD,EAAWG,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEzC,KAAK2C,cAAcD,EAAE1C,KAAK,IACvEuB,EAAgBe,GAAU,wBAAA9F,EAAAY,OAAA,GAAAf,EAAA,KAC3B,kBALc,OAAAJ,EAAAoB,MAAA,KAAAC,UAAA,KAOf8E,GACF,GAAG,IAEH,IAgBMQ,EAAc,eAAApF,GAAAtB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAqB,IAAA,IAAAoF,EAAAC,EAAAC,EAAA,OAAA5G,EAAAA,EAAAA,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,GAEKa,EAAAA,EAAAA,IAAY0E,GAAQ,KAAD,EAA5B,GAATY,EAASlF,EAAAd,KACA,CAADc,EAAAjB,KAAA,eAAAiB,EAAAb,OAAA,SACLkG,EAAAA,GAAAA,MAAY,gDAA8C,OAE7DF,EAAkBD,EAAUN,QAC5BQ,EAAgBD,EAAgBN,MAAK,SAACC,EAAGC,GAAC,OAC9CD,EAAEzC,KAAK2C,cAAcD,EAAE1C,KAAK,IAE9BuB,EAAgBwB,GAAepF,EAAAjB,KAAA,iBAAAiB,EAAAlB,KAAA,GAAAkB,EAAAX,GAAAW,EAAA,SAE/B,IAAIR,MAAQ,yBAAAQ,EAAAP,OAAA,GAAAK,EAAA,mBAEf,kBAdmB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAgBpB,OACE6C,EAAAA,EAAAA,MAAA8C,EAAAA,SAAA,CAAAhE,SAAA,EACEkB,EAAAA,EAAAA,MAACU,EAAI,CAACqC,SA7BW,SAACC,GAGpB,GAFAA,EAAEC,iBAEoB,KAAlBnB,EAAOoB,OACT,OAAOL,EAAAA,GAAAA,KAAW,wBAEpBhB,GAAU,GACVY,IACAZ,GAAU,EACZ,EAoBiC/C,SAAA,EAC3BD,EAAAA,EAAAA,KAACgC,EAAM,CAACsC,KAAK,SAASC,UAAU,SAAQtE,UACtCD,EAAAA,EAAAA,KAACwE,EAAAA,IAAe,CAACC,KAAK,OAAOC,MAAM,0BAErC1E,EAAAA,EAAAA,KAAC8B,EAAK,CACJwC,KAAK,OACLK,aAAa,MACbC,WAAS,EACTC,YAAY,oBACZC,MAAO7B,EACP8B,SA5CiB,SAACZ,GACxB,IAAMW,EAAQX,EAAEa,cAAcF,MAC9BlC,EAA0B,KAAVkC,EAAe,CAAE7B,OAAQ6B,EAAMG,eAAkB,CAAC,EACpE,OA6CKlC,IAAU/C,EAAAA,EAAAA,KAACkF,EAAAA,EAAM,IACjB5C,EAAa6C,OAAS,IAAKnF,EAAAA,EAAAA,KAACoF,EAAY,CAACpE,KAAMsB,MAGtD,EC5Ea+C,EAAM7F,EAAAA,EAAAA,OAAaH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uJAIV,SAACM,GAAC,SAAAhC,OAAQgC,EAAEC,MAAMC,OAAOiC,OAAM,IAKxCzB,EAAMd,EAAAA,EAAAA,IAAUC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8O,UCuB7B,EA5Ba,WACX,IAAA4C,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCoD,EAAIlD,EAAA,GAAEmD,EAAOnD,EAAA,GAEdoD,GAAQC,EAAAA,EAAAA,IAAe,CAC3BC,UAAW,WACTH,GAAQ,EACV,IAQF,OACEpE,EAAAA,EAAAA,MAAA8C,EAAAA,SAAA,CAAAhE,SAAA,CACGqF,GACCtF,EAAAA,EAAAA,KAACqF,EAAG,CAACnB,SAAU,kBAPnByB,EAAAA,EAAAA,WACAJ,GAAQ,EAMyB,EAACtF,SAAC,YAE/BD,EAAAA,EAAAA,KAACqF,EAAG,CAACO,QAAS,kBAAMJ,GAAO,EAACvF,SAAC,yBAG/BD,EAAAA,EAAAA,KAACM,EAAG,CAACoB,IAAKmE,EAAKlE,IAAI,oBACnB3B,EAAAA,EAAAA,KAAC8F,EAAU,MAGjB,C","sources":["api.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/SearchResult/SearchResult.styled.jsx","components/SearchResult/SearchResult.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://rickandmortyapi.com/api\";\n\nexport const fetchAllCharacter = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/character`);\n    return response.data;\n  } catch {\n    Promise.reject(new Error(\"Not Found\"));\n  }\n};\n\nexport const fetchByName = async (query) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/character/?name=${query}`);\n    return response.data;\n  } catch {\n    Promise.reject(new Error(\"Not Found\"));\n  }\n};\n\nexport const fetchById = async (id) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/character/${id}`);\n    return response.data;\n  } catch {\n    Promise.reject(new Error(\"Not Found\"));\n  }\n};\n","import styled from \"@emotion/styled\";\nimport { keyframes } from \"@emotion/react\";\n\nconst spin = keyframes`\n  to {\n\t transform: rotate(360deg);\n  }\t\n`;\n\nexport const Loading = styled.section`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nexport const Spinner = styled.div`\n  position: relative;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n\n  ::before,\n  ::after {\n    content: \"\";\n    position: absolute;\n    border-radius: inherit;\n  }\n\n  ::before {\n    width: 100%;\n    height: 100%;\n    background-image: linear-gradient(\n      0deg,\n      rgba(156, 138, 92, 1) 0%,\n      rgba(217, 217, 217, 1) 100%\n    );\n    animation: ${spin} 0.5s infinite linear;\n    top: 0%;\n    left: 0%;\n  }\n  ::after {\n    width: 85%;\n    height: 85%;\n    background-color: ${(p) => `${p.theme.colors.background}`};\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n","import React from \"react\";\nimport { Loading, Spinner } from \"./Loader.styled\";\n\nconst Loader = () => {\n  return (\n    <Loading>\n      <Spinner></Spinner>\n    </Loading>\n  );\n};\n\nexport default Loader;\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const Items = styled.ul`\n  display: grid;\n  grid-gap: 20px;\n  place-items: center;\n  grid-template-columns: repeat(1, 1fr);\n\n  @media (min-width: 400px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media (min-width: 767px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nexport const Item = styled.li`\n  box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12),\n    0px 2px 4px rgba(0, 0, 0, 0.14);\n  border-radius: 4px;\n  letter-spacing: 0.15px;\n`;\nexport const Img = styled.img`\n  width: 100%;\n`;\n\nexport const Box = styled.div`\n  padding: 16px 16px 12px;\n  height: 110px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 1px;\n  color: ${(p) => `${p.theme.colors.title}`};\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 30px;\n`;\nexport const Text = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: 0.25px;\n  color: ${(p) => `${p.theme.colors.text}`};\n`;\n","import { useLocation, Outlet } from \"react-router-dom\";\nimport {\n  Box,\n  Items,\n  Item,\n  Img,\n  Title,\n  Text,\n  StyledLink,\n} from \"./SearchResult.styled\";\n\nconst SearchResult = ({ name }) => {\n  const location = useLocation();\n\n  return (\n    <Items>\n      {name.map(({ id, name, status, image }) => (\n        <Item key={id}>\n          <StyledLink to={`/${id}`} state={{ from: location }}>\n            <Img src={image} alt={name} />\n            <Box>\n              <Title>{name}</Title>\n              <Text>{status}</Text>\n            </Box>\n          </StyledLink>\n        </Item>\n      ))}\n      <Outlet />\n    </Items>\n  );\n};\n\nexport default SearchResult;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  position: relative;\n  margin-bottom: 33px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 56px;\n  padding: 20px 20px 20px 48px;\n  border: 1px solid ${(p) => `${p.theme.colors.border}`};\n  border-radius: 8px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 50%;\n  left: 0%;\n  transform: translate(50%, -50%);\n\n  padding: 0;\n  padding-left: 5px;\n  border: none;\n  background-color: transparent;\n`;\n","import { useState, useEffect } from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport { fetchByName, fetchAllCharacter } from \"../../api\";\nimport SearchResult from \"../SearchResult/SearchResult\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport { toast } from \"react-toastify\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Form, Input, Button } from \"./SearchForm.styled\";\n\nconst SearchForm = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loader, setLoader] = useState(false);\n  const filter = searchParams.get(\"filter\") ?? \"\";\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetchAllCharacter();\n      const resultData = data.results;\n      const sortData = resultData.sort((a, b) => a.name.localeCompare(b.name));\n      setSearchResult(sortData);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleNameChange = (e) => {\n    const value = e.currentTarget.value;\n    setSearchParams(value !== \"\" ? { filter: value.toLowerCase() } : {});\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n\n    if (filter.trim() === \"\") {\n      return toast.info(\"Please select a name\");\n    }\n    setLoader(true);\n    fetchCharacter();\n    setLoader(false);\n  };\n\n  const fetchCharacter = async () => {\n    try {\n      const character = await fetchByName(filter);\n      if (!character) {\n        return toast.error(\"We did not find the character you requested\");\n      }\n      const resultCharacter = character.results;\n      const sortCharacter = resultCharacter.sort((a, b) =>\n        a.name.localeCompare(b.name)\n      );\n      setSearchResult(sortCharacter);\n    } catch (error) {\n      new Error();\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSearch}>\n        <Button type=\"submit\" className=\"button\">\n          <AiOutlineSearch size=\"18px\" color=\"rgba(0, 0, 0, 0.5)\" />\n        </Button>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Filter by name...\"\n          value={filter}\n          onChange={handleNameChange}\n        />\n      </Form>\n\n      {loader && <Loader />}\n      {searchResult.length > 0 && <SearchResult name={searchResult} />}\n    </>\n  );\n};\n\nexport default SearchForm;\n","import styled from \"@emotion/styled\";\n\nexport const Btn = styled.button`\n  margin-bottom: 20px;\n  width: 160px;\n  height: 40px;\n  border: 1px solid ${(p) => `${p.theme.colors.border}`};\n  border-radius: 8px;\n  background-color: transparent;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  max-width: 300px;\n  margin: 0 auto;\n  margin-bottom: 32px;\n\n  @media (min-width: 767px) {\n    margin-bottom: 16px;\n    max-width: 400px;\n  }\n  @media (min-width: 1440) {\n    max-width: 600px;\n  }\n`;\n","import img from \"../../rick.png\";\nimport SearchForm from \"../../components/SearchForm/SearchForm\";\nimport { Img, Btn } from \"./Home.styled\";\nimport { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\nimport { useState } from \"react\";\n\nconst Home = () => {\n  const [user, setUser] = useState(false);\n\n  const login = useGoogleLogin({\n    onSuccess: () => {\n      setUser(true);\n    },\n  });\n\n  const logout = () => {\n    googleLogout();\n    setUser(false);\n  };\n\n  return (\n    <>\n      {user ? (\n        <Btn onSubmit={() => logout()}>Logout</Btn>\n      ) : (\n        <Btn onClick={() => login()}>Sign in with Google</Btn>\n      )}\n\n      <Img src={img} alt=\"rick and morty\" />\n      <SearchForm />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","fetchAllCharacter","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","sent","abrupt","data","t0","Promise","reject","Error","stop","apply","arguments","fetchByName","_ref2","_callee2","query","_context2","_x","fetchById","_ref3","_callee3","id","_context3","_x2","spin","keyframes","_templateObject","_taggedTemplateLiteral","Loading","styled","_templateObject2","Spinner","_templateObject3","p","theme","colors","background","_jsx","children","StyledLink","NavLink","Items","Item","Img","_templateObject4","Box","_templateObject5","Title","_templateObject6","title","Text","_templateObject7","text","name","location","useLocation","_jsxs","map","status","image","to","state","from","src","alt","Outlet","Form","Input","border","Button","_searchParams$get","_useState","useState","_useState2","_slicedToArray","searchResult","setSearchResult","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","loader","setLoader","filter","get","useEffect","fetchData","resultData","sortData","results","sort","a","b","localeCompare","fetchCharacter","character","resultCharacter","sortCharacter","toast","_Fragment","onSubmit","e","preventDefault","trim","type","className","AiOutlineSearch","size","color","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Loader","length","SearchResult","Btn","user","setUser","login","useGoogleLogin","onSuccess","googleLogout","onClick","img","SearchForm"],"sourceRoot":""}